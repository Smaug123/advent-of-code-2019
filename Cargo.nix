# This file was @generated by cargo2nix 0.11.0.
# It is not intended to be manually edited.
args @ {
  release ? true,
  rootFeatures ? [
    "day_1/default"
    "day_2/default"
    "intcode/default"
    "day_3/default"
    "day_4/default"
    "day_5/default"
    "day_6/default"
    "day_7/default"
    "day_8/default"
  ],
  rustPackages,
  buildRustPackages,
  hostPlatform,
  hostPlatformCpu ? null,
  hostPlatformFeatures ? [],
  target ? null,
  codegenOpts ? null,
  profileOpts ? null,
  cargoUnstableFlags ? null,
  rustcLinkFlags ? null,
  rustcBuildFlags ? null,
  mkRustCrate,
  rustLib,
  lib,
  workspaceSrc,
  ignoreLockHash,
}: let
  nixifiedLockHash = "7df589d8339408dc9ea0f0602db747e61edb272955a74955f7d7eeaca2d60b18";
  workspaceSrc =
    if args.workspaceSrc == null
    then ./.
    else args.workspaceSrc;
  currentLockHash = builtins.hashFile "sha256" (workspaceSrc + /Cargo.lock);
  lockHashIgnored =
    if ignoreLockHash
    then builtins.trace "Ignoring lock hash" ignoreLockHash
    else ignoreLockHash;
in
  if !lockHashIgnored && (nixifiedLockHash != currentLockHash)
  then throw "Cargo.nix ${nixifiedLockHash} is out of sync with Cargo.lock ${currentLockHash}"
  else let
    inherit (rustLib) fetchCratesIo fetchCrateLocal fetchCrateGit fetchCrateAlternativeRegistry expandFeatures decideProfile genDrvsByProfile;
    profilesByName = {
    };
    rootFeatures' = expandFeatures rootFeatures;
    overridableMkRustCrate = f: let
      drvs = genDrvsByProfile profilesByName ({
        profile,
        profileName,
      }:
        mkRustCrate ({inherit release profile hostPlatformCpu hostPlatformFeatures target profileOpts codegenOpts cargoUnstableFlags rustcLinkFlags rustcBuildFlags;} // (f profileName)));
    in
      {
        compileMode ? null,
        profileName ? decideProfile compileMode release,
      }: let
        drv = drvs.${profileName};
      in
        if compileMode == null
        then drv
        else drv.override {inherit compileMode;};
  in {
    cargo2nixVersion = "0.11.0";
    workspace = {
      day_1 = rustPackages.unknown.day_1."0.1.0";
      day_2 = rustPackages.unknown.day_2."0.1.0";
      intcode = rustPackages.unknown.intcode."0.1.0";
      day_3 = rustPackages.unknown.day_3."0.1.0";
      day_4 = rustPackages.unknown.day_4."0.1.0";
      day_5 = rustPackages.unknown.day_5."0.1.0";
      day_6 = rustPackages.unknown.day_6."0.1.0";
      day_7 = rustPackages.unknown.day_7."0.1.0";
      day_8 = rustPackages.unknown.day_8."0.1.0";
    };
    "registry+https://github.com/rust-lang/crates.io-index".aho-corasick."1.1.3" = overridableMkRustCrate (profileName: rec {
      name = "aho-corasick";
      version = "1.1.3";
      registry = "registry+https://github.com/rust-lang/crates.io-index";
      src = fetchCratesIo {
        inherit name version;
        sha256 = "8e60d3430d3a69478ad0993f19238d2df97c507009a52b3c10addcd7f6bcb916";
      };
      features = builtins.concatLists [
        ["std"]
      ];
      dependencies = {
        memchr = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".memchr."2.7.4" {inherit profileName;}).out;
      };
    });

    "registry+https://github.com/rust-lang/crates.io-index".anes."0.1.6" = overridableMkRustCrate (profileName: rec {
      name = "anes";
      version = "0.1.6";
      registry = "registry+https://github.com/rust-lang/crates.io-index";
      src = fetchCratesIo {
        inherit name version;
        sha256 = "4b46cbb362ab8752921c97e041f5e366ee6297bd428a31275b9fcf1e380f7299";
      };
      features = builtins.concatLists [
        ["default"]
      ];
    });

    "registry+https://github.com/rust-lang/crates.io-index".atty."0.2.14" = overridableMkRustCrate (profileName: rec {
      name = "atty";
      version = "0.2.14";
      registry = "registry+https://github.com/rust-lang/crates.io-index";
      src = fetchCratesIo {
        inherit name version;
        sha256 = "d9b39be18770d11421cdb1b9947a45dd3f37e93092cbf377614828a319d5fee8";
      };
      dependencies = {
        ${
          if hostPlatform.parsed.kernel.name == "hermit"
          then "hermit_abi"
          else null
        } =
          (rustPackages."registry+https://github.com/rust-lang/crates.io-index".hermit-abi."0.1.19" {inherit profileName;}).out;
        ${
          if hostPlatform.isUnix
          then "libc"
          else null
        } =
          (rustPackages."registry+https://github.com/rust-lang/crates.io-index".libc."0.2.169" {inherit profileName;}).out;
        ${
          if hostPlatform.isWindows
          then "winapi"
          else null
        } =
          (rustPackages."registry+https://github.com/rust-lang/crates.io-index".winapi."0.3.9" {inherit profileName;}).out;
      };
    });

    "registry+https://github.com/rust-lang/crates.io-index".autocfg."1.4.0" = overridableMkRustCrate (profileName: rec {
      name = "autocfg";
      version = "1.4.0";
      registry = "registry+https://github.com/rust-lang/crates.io-index";
      src = fetchCratesIo {
        inherit name version;
        sha256 = "ace50bade8e6234aa140d9a2f552bbee1db4d353f69b8217bc503490fc1a9f26";
      };
    });

    "registry+https://github.com/rust-lang/crates.io-index".bitflags."1.3.2" = overridableMkRustCrate (profileName: rec {
      name = "bitflags";
      version = "1.3.2";
      registry = "registry+https://github.com/rust-lang/crates.io-index";
      src = fetchCratesIo {
        inherit name version;
        sha256 = "bef38d45163c2f1dde094a7dfd33ccf595c92905c8f8f4fdc18d06fb1037718a";
      };
      features = builtins.concatLists [
        ["default"]
      ];
    });

    "registry+https://github.com/rust-lang/crates.io-index".bumpalo."3.16.0" = overridableMkRustCrate (profileName: rec {
      name = "bumpalo";
      version = "3.16.0";
      registry = "registry+https://github.com/rust-lang/crates.io-index";
      src = fetchCratesIo {
        inherit name version;
        sha256 = "79296716171880943b8470b5f8d03aa55eb2e645a4874bdbb28adb49162e012c";
      };
      features = builtins.concatLists [
        ["default"]
      ];
    });

    "registry+https://github.com/rust-lang/crates.io-index".cast."0.3.0" = overridableMkRustCrate (profileName: rec {
      name = "cast";
      version = "0.3.0";
      registry = "registry+https://github.com/rust-lang/crates.io-index";
      src = fetchCratesIo {
        inherit name version;
        sha256 = "37b2a672a2cb129a2e41c10b1224bb368f9f37a2b16b612598138befd7b37eb5";
      };
    });

    "registry+https://github.com/rust-lang/crates.io-index".cfg-if."1.0.0" = overridableMkRustCrate (profileName: rec {
      name = "cfg-if";
      version = "1.0.0";
      registry = "registry+https://github.com/rust-lang/crates.io-index";
      src = fetchCratesIo {
        inherit name version;
        sha256 = "baf1de4339761588bc0619e3cbc0120ee582ebb74b53b4efbf79117bd2da40fd";
      };
    });

    "registry+https://github.com/rust-lang/crates.io-index".ciborium."0.2.2" = overridableMkRustCrate (profileName: rec {
      name = "ciborium";
      version = "0.2.2";
      registry = "registry+https://github.com/rust-lang/crates.io-index";
      src = fetchCratesIo {
        inherit name version;
        sha256 = "42e69ffd6f0917f5c029256a24d0161db17cea3997d185db0d35926308770f0e";
      };
      features = builtins.concatLists [
        ["default"]
        ["std"]
      ];
      dependencies = {
        ciborium_io = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".ciborium-io."0.2.2" {inherit profileName;}).out;
        ciborium_ll = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".ciborium-ll."0.2.2" {inherit profileName;}).out;
        serde = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".serde."1.0.217" {inherit profileName;}).out;
      };
    });

    "registry+https://github.com/rust-lang/crates.io-index".ciborium-io."0.2.2" = overridableMkRustCrate (profileName: rec {
      name = "ciborium-io";
      version = "0.2.2";
      registry = "registry+https://github.com/rust-lang/crates.io-index";
      src = fetchCratesIo {
        inherit name version;
        sha256 = "05afea1e0a06c9be33d539b876f1ce3692f4afea2cb41f740e7743225ed1c757";
      };
      features = builtins.concatLists [
        ["alloc"]
        ["std"]
      ];
    });

    "registry+https://github.com/rust-lang/crates.io-index".ciborium-ll."0.2.2" = overridableMkRustCrate (profileName: rec {
      name = "ciborium-ll";
      version = "0.2.2";
      registry = "registry+https://github.com/rust-lang/crates.io-index";
      src = fetchCratesIo {
        inherit name version;
        sha256 = "57663b653d948a338bfb3eeba9bb2fd5fcfaecb9e199e87e1eda4d9e8b240fd9";
      };
      dependencies = {
        ciborium_io = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".ciborium-io."0.2.2" {inherit profileName;}).out;
        half = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".half."2.4.1" {inherit profileName;}).out;
      };
    });

    "registry+https://github.com/rust-lang/crates.io-index".clap."3.2.25" = overridableMkRustCrate (profileName: rec {
      name = "clap";
      version = "3.2.25";
      registry = "registry+https://github.com/rust-lang/crates.io-index";
      src = fetchCratesIo {
        inherit name version;
        sha256 = "4ea181bf566f71cb9a5d17a59e1871af638180a18fb0035c92ae62b705207123";
      };
      features = builtins.concatLists [
        ["std"]
      ];
      dependencies = {
        bitflags = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".bitflags."1.3.2" {inherit profileName;}).out;
        clap_lex = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".clap_lex."0.2.4" {inherit profileName;}).out;
        indexmap = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".indexmap."1.9.3" {inherit profileName;}).out;
        textwrap = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".textwrap."0.16.1" {inherit profileName;}).out;
      };
    });

    "registry+https://github.com/rust-lang/crates.io-index".clap_lex."0.2.4" = overridableMkRustCrate (profileName: rec {
      name = "clap_lex";
      version = "0.2.4";
      registry = "registry+https://github.com/rust-lang/crates.io-index";
      src = fetchCratesIo {
        inherit name version;
        sha256 = "2850f2f5a82cbf437dd5af4d49848fbdfc27c157c3d010345776f952765261c5";
      };
      dependencies = {
        os_str_bytes = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".os_str_bytes."6.6.1" {inherit profileName;}).out;
      };
    });

    "registry+https://github.com/rust-lang/crates.io-index".console."0.15.10" = overridableMkRustCrate (profileName: rec {
      name = "console";
      version = "0.15.10";
      registry = "registry+https://github.com/rust-lang/crates.io-index";
      src = fetchCratesIo {
        inherit name version;
        sha256 = "ea3c6ecd8059b57859df5c69830340ed3c41d30e3da0c1cbed90a96ac853041b";
      };
      dependencies = {
        ${
          if hostPlatform.isWindows
          then "encode_unicode"
          else null
        } =
          (rustPackages."registry+https://github.com/rust-lang/crates.io-index".encode_unicode."1.0.0" {inherit profileName;}).out;
        libc = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".libc."0.2.169" {inherit profileName;}).out;
        once_cell = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".once_cell."1.20.2" {inherit profileName;}).out;
        ${
          if hostPlatform.isWindows
          then "windows_sys"
          else null
        } =
          (rustPackages."registry+https://github.com/rust-lang/crates.io-index".windows-sys."0.59.0" {inherit profileName;}).out;
      };
    });

    "registry+https://github.com/rust-lang/crates.io-index".criterion."0.4.0" = overridableMkRustCrate (profileName: rec {
      name = "criterion";
      version = "0.4.0";
      registry = "registry+https://github.com/rust-lang/crates.io-index";
      src = fetchCratesIo {
        inherit name version;
        sha256 = "e7c76e09c1aae2bc52b3d2f29e13c6572553b30c4aa1b8a49fd70de6412654cb";
      };
      features = builtins.concatLists [
        ["cargo_bench_support"]
        ["default"]
        ["plotters"]
        ["rayon"]
      ];
      dependencies = {
        anes = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".anes."0.1.6" {inherit profileName;}).out;
        atty = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".atty."0.2.14" {inherit profileName;}).out;
        cast = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".cast."0.3.0" {inherit profileName;}).out;
        ciborium = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".ciborium."0.2.2" {inherit profileName;}).out;
        clap = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".clap."3.2.25" {inherit profileName;}).out;
        criterion_plot = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".criterion-plot."0.5.0" {inherit profileName;}).out;
        itertools = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".itertools."0.10.5" {inherit profileName;}).out;
        lazy_static = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".lazy_static."1.5.0" {inherit profileName;}).out;
        num_traits = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".num-traits."0.2.19" {inherit profileName;}).out;
        oorandom = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".oorandom."11.1.4" {inherit profileName;}).out;
        plotters = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".plotters."0.3.7" {inherit profileName;}).out;
        rayon = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".rayon."1.10.0" {inherit profileName;}).out;
        regex = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".regex."1.11.1" {inherit profileName;}).out;
        serde = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".serde."1.0.217" {inherit profileName;}).out;
        serde_derive = (buildRustPackages."registry+https://github.com/rust-lang/crates.io-index".serde_derive."1.0.217" {profileName = "__noProfile";}).out;
        serde_json = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".serde_json."1.0.134" {inherit profileName;}).out;
        tinytemplate = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".tinytemplate."1.2.1" {inherit profileName;}).out;
        walkdir = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".walkdir."2.5.0" {inherit profileName;}).out;
      };
    });

    "registry+https://github.com/rust-lang/crates.io-index".criterion-plot."0.5.0" = overridableMkRustCrate (profileName: rec {
      name = "criterion-plot";
      version = "0.5.0";
      registry = "registry+https://github.com/rust-lang/crates.io-index";
      src = fetchCratesIo {
        inherit name version;
        sha256 = "6b50826342786a51a89e2da3a28f1c32b06e387201bc2d19791f622c673706b1";
      };
      dependencies = {
        cast = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".cast."0.3.0" {inherit profileName;}).out;
        itertools = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".itertools."0.10.5" {inherit profileName;}).out;
      };
    });

    "registry+https://github.com/rust-lang/crates.io-index".crossbeam-deque."0.8.6" = overridableMkRustCrate (profileName: rec {
      name = "crossbeam-deque";
      version = "0.8.6";
      registry = "registry+https://github.com/rust-lang/crates.io-index";
      src = fetchCratesIo {
        inherit name version;
        sha256 = "9dd111b7b7f7d55b72c0a6ae361660ee5853c9af73f70c3c2ef6858b950e2e51";
      };
      features = builtins.concatLists [
        ["default"]
        ["std"]
      ];
      dependencies = {
        crossbeam_epoch = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".crossbeam-epoch."0.9.18" {inherit profileName;}).out;
        crossbeam_utils = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".crossbeam-utils."0.8.21" {inherit profileName;}).out;
      };
    });

    "registry+https://github.com/rust-lang/crates.io-index".crossbeam-epoch."0.9.18" = overridableMkRustCrate (profileName: rec {
      name = "crossbeam-epoch";
      version = "0.9.18";
      registry = "registry+https://github.com/rust-lang/crates.io-index";
      src = fetchCratesIo {
        inherit name version;
        sha256 = "5b82ac4a3c2ca9c3460964f020e1402edd5753411d7737aa39c3714ad1b5420e";
      };
      features = builtins.concatLists [
        ["alloc"]
        ["std"]
      ];
      dependencies = {
        crossbeam_utils = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".crossbeam-utils."0.8.21" {inherit profileName;}).out;
      };
    });

    "registry+https://github.com/rust-lang/crates.io-index".crossbeam-utils."0.8.21" = overridableMkRustCrate (profileName: rec {
      name = "crossbeam-utils";
      version = "0.8.21";
      registry = "registry+https://github.com/rust-lang/crates.io-index";
      src = fetchCratesIo {
        inherit name version;
        sha256 = "d0a5c400df2834b80a4c3327b3aad3a4c4cd4de0629063962b03235697506a28";
      };
      features = builtins.concatLists [
        ["default"]
        ["std"]
      ];
    });

    "registry+https://github.com/rust-lang/crates.io-index".crunchy."0.2.2" = overridableMkRustCrate (profileName: rec {
      name = "crunchy";
      version = "0.2.2";
      registry = "registry+https://github.com/rust-lang/crates.io-index";
      src = fetchCratesIo {
        inherit name version;
        sha256 = "7a81dae078cea95a014a339291cec439d2f232ebe854a9d672b796c6afafa9b7";
      };
      features = builtins.concatLists [
        ["default"]
        ["limit_128"]
      ];
    });

    "unknown".day_1."0.1.0" = overridableMkRustCrate (profileName: rec {
      name = "day_1";
      version = "0.1.0";
      registry = "unknown";
      src = fetchCrateLocal workspaceSrc;
      features = builtins.concatLists [
        (lib.optional (rootFeatures' ? "day_1/no_real_inputs") "no_real_inputs")
      ];
      devDependencies = {
        criterion = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".criterion."0.4.0" {inherit profileName;}).out;
      };
    });

    "unknown".day_2."0.1.0" = overridableMkRustCrate (profileName: rec {
      name = "day_2";
      version = "0.1.0";
      registry = "unknown";
      src = fetchCrateLocal workspaceSrc;
      features = builtins.concatLists [
        (lib.optional (rootFeatures' ? "day_2/no_real_inputs") "no_real_inputs")
      ];
      dependencies = {
        intcode = (rustPackages."unknown".intcode."0.1.0" {inherit profileName;}).out;
      };
      devDependencies = {
        criterion = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".criterion."0.4.0" {inherit profileName;}).out;
      };
    });

    "unknown".day_3."0.1.0" = overridableMkRustCrate (profileName: rec {
      name = "day_3";
      version = "0.1.0";
      registry = "unknown";
      src = fetchCrateLocal workspaceSrc;
      features = builtins.concatLists [
        (lib.optional (rootFeatures' ? "day_3/no_real_inputs") "no_real_inputs")
      ];
      devDependencies = {
        criterion = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".criterion."0.4.0" {inherit profileName;}).out;
      };
    });

    "unknown".day_4."0.1.0" = overridableMkRustCrate (profileName: rec {
      name = "day_4";
      version = "0.1.0";
      registry = "unknown";
      src = fetchCrateLocal workspaceSrc;
      features = builtins.concatLists [
        (lib.optional (rootFeatures' ? "day_4/no_real_inputs") "no_real_inputs")
      ];
      devDependencies = {
        criterion = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".criterion."0.4.0" {inherit profileName;}).out;
      };
    });

    "unknown".day_5."0.1.0" = overridableMkRustCrate (profileName: rec {
      name = "day_5";
      version = "0.1.0";
      registry = "unknown";
      src = fetchCrateLocal workspaceSrc;
      features = builtins.concatLists [
        (lib.optional (rootFeatures' ? "day_5/no_real_inputs") "no_real_inputs")
      ];
      dependencies = {
        intcode = (rustPackages."unknown".intcode."0.1.0" {inherit profileName;}).out;
      };
      devDependencies = {
        criterion = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".criterion."0.4.0" {inherit profileName;}).out;
      };
    });

    "unknown".day_6."0.1.0" = overridableMkRustCrate (profileName: rec {
      name = "day_6";
      version = "0.1.0";
      registry = "unknown";
      src = fetchCrateLocal workspaceSrc;
      features = builtins.concatLists [
        (lib.optional (rootFeatures' ? "day_6/no_real_inputs") "no_real_inputs")
      ];
      devDependencies = {
        criterion = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".criterion."0.4.0" {inherit profileName;}).out;
      };
    });

    "unknown".day_7."0.1.0" = overridableMkRustCrate (profileName: rec {
      name = "day_7";
      version = "0.1.0";
      registry = "unknown";
      src = fetchCrateLocal workspaceSrc;
      features = builtins.concatLists [
        (lib.optional (rootFeatures' ? "day_7/no_real_inputs") "no_real_inputs")
      ];
      dependencies = {
        intcode = (rustPackages."unknown".intcode."0.1.0" {inherit profileName;}).out;
        itertools = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".itertools."0.13.0" {inherit profileName;}).out;
      };
      devDependencies = {
        criterion = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".criterion."0.4.0" {inherit profileName;}).out;
      };
    });

    "unknown".day_8."0.1.0" = overridableMkRustCrate (profileName: rec {
      name = "day_8";
      version = "0.1.0";
      registry = "unknown";
      src = fetchCrateLocal workspaceSrc;
      features = builtins.concatLists [
        (lib.optional (rootFeatures' ? "day_8/no_real_inputs") "no_real_inputs")
      ];
      devDependencies = {
        criterion = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".criterion."0.4.0" {inherit profileName;}).out;
        insta = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".insta."1.41.1" {inherit profileName;}).out;
      };
    });

    "registry+https://github.com/rust-lang/crates.io-index".either."1.13.0" = overridableMkRustCrate (profileName: rec {
      name = "either";
      version = "1.13.0";
      registry = "registry+https://github.com/rust-lang/crates.io-index";
      src = fetchCratesIo {
        inherit name version;
        sha256 = "60b1af1c220855b6ceac025d3f6ecdd2b7c4894bfe9cd9bda4fbb4bc7c0d4cf0";
      };
      features = builtins.concatLists [
        ["use_std"]
      ];
    });

    "registry+https://github.com/rust-lang/crates.io-index".encode_unicode."1.0.0" = overridableMkRustCrate (profileName: rec {
      name = "encode_unicode";
      version = "1.0.0";
      registry = "registry+https://github.com/rust-lang/crates.io-index";
      src = fetchCratesIo {
        inherit name version;
        sha256 = "34aa73646ffb006b8f5147f3dc182bd4bcb190227ce861fc4a4844bf8e3cb2c0";
      };
      features = builtins.concatLists [
        ["default"]
        ["std"]
      ];
    });

    "registry+https://github.com/rust-lang/crates.io-index".half."2.4.1" = overridableMkRustCrate (profileName: rec {
      name = "half";
      version = "2.4.1";
      registry = "registry+https://github.com/rust-lang/crates.io-index";
      src = fetchCratesIo {
        inherit name version;
        sha256 = "6dd08c532ae367adf81c312a4580bc67f1d0fe8bc9c460520283f4c0ff277888";
      };
      dependencies = {
        cfg_if = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".cfg-if."1.0.0" {inherit profileName;}).out;
        ${
          if hostPlatform.parsed.cpu.name == "spirv"
          then "crunchy"
          else null
        } =
          (rustPackages."registry+https://github.com/rust-lang/crates.io-index".crunchy."0.2.2" {inherit profileName;}).out;
      };
    });

    "registry+https://github.com/rust-lang/crates.io-index".hashbrown."0.12.3" = overridableMkRustCrate (profileName: rec {
      name = "hashbrown";
      version = "0.12.3";
      registry = "registry+https://github.com/rust-lang/crates.io-index";
      src = fetchCratesIo {
        inherit name version;
        sha256 = "8a9ee70c43aaf417c914396645a0fa852624801b24ebb7ae78fe8272889ac888";
      };
      features = builtins.concatLists [
        ["raw"]
      ];
    });

    "registry+https://github.com/rust-lang/crates.io-index".hermit-abi."0.1.19" = overridableMkRustCrate (profileName: rec {
      name = "hermit-abi";
      version = "0.1.19";
      registry = "registry+https://github.com/rust-lang/crates.io-index";
      src = fetchCratesIo {
        inherit name version;
        sha256 = "62b467343b94ba476dcb2500d242dadbb39557df889310ac77c5d99100aaac33";
      };
      features = builtins.concatLists [
        ["default"]
      ];
      dependencies = {
        libc = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".libc."0.2.169" {inherit profileName;}).out;
      };
    });

    "registry+https://github.com/rust-lang/crates.io-index".indexmap."1.9.3" = overridableMkRustCrate (profileName: rec {
      name = "indexmap";
      version = "1.9.3";
      registry = "registry+https://github.com/rust-lang/crates.io-index";
      src = fetchCratesIo {
        inherit name version;
        sha256 = "bd070e393353796e801d209ad339e89596eb4c8d430d18ede6a1cced8fafbd99";
      };
      features = builtins.concatLists [
        ["std"]
      ];
      dependencies = {
        hashbrown = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".hashbrown."0.12.3" {inherit profileName;}).out;
      };
      buildDependencies = {
        autocfg = (buildRustPackages."registry+https://github.com/rust-lang/crates.io-index".autocfg."1.4.0" {profileName = "__noProfile";}).out;
      };
    });

    "registry+https://github.com/rust-lang/crates.io-index".insta."1.41.1" = overridableMkRustCrate (profileName: rec {
      name = "insta";
      version = "1.41.1";
      registry = "registry+https://github.com/rust-lang/crates.io-index";
      src = fetchCratesIo {
        inherit name version;
        sha256 = "7e9ffc4d4892617c50a928c52b2961cb5174b6fc6ebf252b2fac9d21955c48b8";
      };
      features = builtins.concatLists [
        ["colors"]
        ["console"]
        ["default"]
      ];
      dependencies = {
        console = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".console."0.15.10" {inherit profileName;}).out;
        lazy_static = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".lazy_static."1.5.0" {inherit profileName;}).out;
        linked_hash_map = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".linked-hash-map."0.5.6" {inherit profileName;}).out;
        similar = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".similar."2.6.0" {inherit profileName;}).out;
      };
    });

    "unknown".intcode."0.1.0" = overridableMkRustCrate (profileName: rec {
      name = "intcode";
      version = "0.1.0";
      registry = "unknown";
      src = fetchCrateLocal workspaceSrc;
      dependencies = {
        thiserror = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".thiserror."2.0.9" {inherit profileName;}).out;
      };
      devDependencies = {
        criterion = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".criterion."0.4.0" {inherit profileName;}).out;
      };
    });

    "registry+https://github.com/rust-lang/crates.io-index".itertools."0.10.5" = overridableMkRustCrate (profileName: rec {
      name = "itertools";
      version = "0.10.5";
      registry = "registry+https://github.com/rust-lang/crates.io-index";
      src = fetchCratesIo {
        inherit name version;
        sha256 = "b0fd2260e829bddf4cb6ea802289de2f86d6a7a690192fbe91b3f46e0f2c8473";
      };
      features = builtins.concatLists [
        ["default"]
        ["use_alloc"]
        ["use_std"]
      ];
      dependencies = {
        either = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".either."1.13.0" {inherit profileName;}).out;
      };
    });

    "registry+https://github.com/rust-lang/crates.io-index".itertools."0.13.0" = overridableMkRustCrate (profileName: rec {
      name = "itertools";
      version = "0.13.0";
      registry = "registry+https://github.com/rust-lang/crates.io-index";
      src = fetchCratesIo {
        inherit name version;
        sha256 = "413ee7dfc52ee1a4949ceeb7dbc8a33f2d6c088194d9f922fb8318faf1f01186";
      };
      features = builtins.concatLists [
        ["default"]
        ["use_alloc"]
        ["use_std"]
      ];
      dependencies = {
        either = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".either."1.13.0" {inherit profileName;}).out;
      };
    });

    "registry+https://github.com/rust-lang/crates.io-index".itoa."1.0.14" = overridableMkRustCrate (profileName: rec {
      name = "itoa";
      version = "1.0.14";
      registry = "registry+https://github.com/rust-lang/crates.io-index";
      src = fetchCratesIo {
        inherit name version;
        sha256 = "d75a2a4b1b190afb6f5425f10f6a8f959d2ea0b9c2b1d79553551850539e4674";
      };
    });

    "registry+https://github.com/rust-lang/crates.io-index".js-sys."0.3.76" = overridableMkRustCrate (profileName: rec {
      name = "js-sys";
      version = "0.3.76";
      registry = "registry+https://github.com/rust-lang/crates.io-index";
      src = fetchCratesIo {
        inherit name version;
        sha256 = "6717b6b5b077764fb5966237269cb3c64edddde4b14ce42647430a78ced9e7b7";
      };
      features = builtins.concatLists [
        ["std"]
      ];
      dependencies = {
        once_cell = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".once_cell."1.20.2" {inherit profileName;}).out;
        wasm_bindgen = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".wasm-bindgen."0.2.99" {inherit profileName;}).out;
      };
    });

    "registry+https://github.com/rust-lang/crates.io-index".lazy_static."1.5.0" = overridableMkRustCrate (profileName: rec {
      name = "lazy_static";
      version = "1.5.0";
      registry = "registry+https://github.com/rust-lang/crates.io-index";
      src = fetchCratesIo {
        inherit name version;
        sha256 = "bbd2bcb4c963f2ddae06a2efc7e9f3591312473c50c6685e1f298068316e66fe";
      };
    });

    "registry+https://github.com/rust-lang/crates.io-index".libc."0.2.169" = overridableMkRustCrate (profileName: rec {
      name = "libc";
      version = "0.2.169";
      registry = "registry+https://github.com/rust-lang/crates.io-index";
      src = fetchCratesIo {
        inherit name version;
        sha256 = "b5aba8db14291edd000dfcc4d620c7ebfb122c613afb886ca8803fa4e128a20a";
      };
      features = builtins.concatLists [
        ["default"]
        ["std"]
      ];
    });

    "registry+https://github.com/rust-lang/crates.io-index".linked-hash-map."0.5.6" = overridableMkRustCrate (profileName: rec {
      name = "linked-hash-map";
      version = "0.5.6";
      registry = "registry+https://github.com/rust-lang/crates.io-index";
      src = fetchCratesIo {
        inherit name version;
        sha256 = "0717cef1bc8b636c6e1c1bbdefc09e6322da8a9321966e8928ef80d20f7f770f";
      };
    });

    "registry+https://github.com/rust-lang/crates.io-index".log."0.4.22" = overridableMkRustCrate (profileName: rec {
      name = "log";
      version = "0.4.22";
      registry = "registry+https://github.com/rust-lang/crates.io-index";
      src = fetchCratesIo {
        inherit name version;
        sha256 = "a7a70ba024b9dc04c27ea2f0c0548feb474ec5c54bba33a7f72f873a39d07b24";
      };
    });

    "registry+https://github.com/rust-lang/crates.io-index".memchr."2.7.4" = overridableMkRustCrate (profileName: rec {
      name = "memchr";
      version = "2.7.4";
      registry = "registry+https://github.com/rust-lang/crates.io-index";
      src = fetchCratesIo {
        inherit name version;
        sha256 = "78ca9ab1a0babb1e7d5695e3530886289c18cf2f87ec19a575a0abdce112e3a3";
      };
      features = builtins.concatLists [
        ["alloc"]
        ["std"]
      ];
    });

    "registry+https://github.com/rust-lang/crates.io-index".num-traits."0.2.19" = overridableMkRustCrate (profileName: rec {
      name = "num-traits";
      version = "0.2.19";
      registry = "registry+https://github.com/rust-lang/crates.io-index";
      src = fetchCratesIo {
        inherit name version;
        sha256 = "071dfc062690e90b734c0b2273ce72ad0ffa95f0c74596bc250dcfd960262841";
      };
      features = builtins.concatLists [
        ["default"]
        ["std"]
      ];
      buildDependencies = {
        autocfg = (buildRustPackages."registry+https://github.com/rust-lang/crates.io-index".autocfg."1.4.0" {profileName = "__noProfile";}).out;
      };
    });

    "registry+https://github.com/rust-lang/crates.io-index".once_cell."1.20.2" = overridableMkRustCrate (profileName: rec {
      name = "once_cell";
      version = "1.20.2";
      registry = "registry+https://github.com/rust-lang/crates.io-index";
      src = fetchCratesIo {
        inherit name version;
        sha256 = "1261fe7e33c73b354eab43b1273a57c8f967d0391e80353e51f764ac02cf6775";
      };
      features = builtins.concatLists [
        ["alloc"]
        ["default"]
        ["race"]
        ["std"]
      ];
    });

    "registry+https://github.com/rust-lang/crates.io-index".oorandom."11.1.4" = overridableMkRustCrate (profileName: rec {
      name = "oorandom";
      version = "11.1.4";
      registry = "registry+https://github.com/rust-lang/crates.io-index";
      src = fetchCratesIo {
        inherit name version;
        sha256 = "b410bbe7e14ab526a0e86877eb47c6996a2bd7746f027ba551028c925390e4e9";
      };
    });

    "registry+https://github.com/rust-lang/crates.io-index".os_str_bytes."6.6.1" = overridableMkRustCrate (profileName: rec {
      name = "os_str_bytes";
      version = "6.6.1";
      registry = "registry+https://github.com/rust-lang/crates.io-index";
      src = fetchCratesIo {
        inherit name version;
        sha256 = "e2355d85b9a3786f481747ced0e0ff2ba35213a1f9bd406ed906554d7af805a1";
      };
      features = builtins.concatLists [
        ["raw_os_str"]
      ];
    });

    "registry+https://github.com/rust-lang/crates.io-index".plotters."0.3.7" = overridableMkRustCrate (profileName: rec {
      name = "plotters";
      version = "0.3.7";
      registry = "registry+https://github.com/rust-lang/crates.io-index";
      src = fetchCratesIo {
        inherit name version;
        sha256 = "5aeb6f403d7a4911efb1e33402027fc44f29b5bf6def3effcc22d7bb75f2b747";
      };
      features = builtins.concatLists [
        ["area_series"]
        ["line_series"]
        ["plotters-svg"]
        ["svg_backend"]
      ];
      dependencies = {
        num_traits = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".num-traits."0.2.19" {inherit profileName;}).out;
        plotters_backend = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".plotters-backend."0.3.7" {inherit profileName;}).out;
        plotters_svg = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".plotters-svg."0.3.7" {inherit profileName;}).out;
        ${
          if hostPlatform.parsed.cpu.name == "wasm32" && !(hostPlatform.parsed.kernel.name == "wasi")
          then "wasm_bindgen"
          else null
        } =
          (rustPackages."registry+https://github.com/rust-lang/crates.io-index".wasm-bindgen."0.2.99" {inherit profileName;}).out;
        ${
          if hostPlatform.parsed.cpu.name == "wasm32" && !(hostPlatform.parsed.kernel.name == "wasi")
          then "web_sys"
          else null
        } =
          (rustPackages."registry+https://github.com/rust-lang/crates.io-index".web-sys."0.3.76" {inherit profileName;}).out;
      };
    });

    "registry+https://github.com/rust-lang/crates.io-index".plotters-backend."0.3.7" = overridableMkRustCrate (profileName: rec {
      name = "plotters-backend";
      version = "0.3.7";
      registry = "registry+https://github.com/rust-lang/crates.io-index";
      src = fetchCratesIo {
        inherit name version;
        sha256 = "df42e13c12958a16b3f7f4386b9ab1f3e7933914ecea48da7139435263a4172a";
      };
    });

    "registry+https://github.com/rust-lang/crates.io-index".plotters-svg."0.3.7" = overridableMkRustCrate (profileName: rec {
      name = "plotters-svg";
      version = "0.3.7";
      registry = "registry+https://github.com/rust-lang/crates.io-index";
      src = fetchCratesIo {
        inherit name version;
        sha256 = "51bae2ac328883f7acdfea3d66a7c35751187f870bc81f94563733a154d7a670";
      };
      dependencies = {
        plotters_backend = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".plotters-backend."0.3.7" {inherit profileName;}).out;
      };
    });

    "registry+https://github.com/rust-lang/crates.io-index".proc-macro2."1.0.92" = overridableMkRustCrate (profileName: rec {
      name = "proc-macro2";
      version = "1.0.92";
      registry = "registry+https://github.com/rust-lang/crates.io-index";
      src = fetchCratesIo {
        inherit name version;
        sha256 = "37d3544b3f2748c54e147655edb5025752e2303145b5aefb3c3ea2c78b973bb0";
      };
      features = builtins.concatLists [
        ["default"]
        ["proc-macro"]
      ];
      dependencies = {
        unicode_ident = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".unicode-ident."1.0.14" {inherit profileName;}).out;
      };
    });

    "registry+https://github.com/rust-lang/crates.io-index".quote."1.0.38" = overridableMkRustCrate (profileName: rec {
      name = "quote";
      version = "1.0.38";
      registry = "registry+https://github.com/rust-lang/crates.io-index";
      src = fetchCratesIo {
        inherit name version;
        sha256 = "0e4dccaaaf89514f546c693ddc140f729f958c247918a13380cccc6078391acc";
      };
      features = builtins.concatLists [
        ["default"]
        ["proc-macro"]
      ];
      dependencies = {
        proc_macro2 = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".proc-macro2."1.0.92" {inherit profileName;}).out;
      };
    });

    "registry+https://github.com/rust-lang/crates.io-index".rayon."1.10.0" = overridableMkRustCrate (profileName: rec {
      name = "rayon";
      version = "1.10.0";
      registry = "registry+https://github.com/rust-lang/crates.io-index";
      src = fetchCratesIo {
        inherit name version;
        sha256 = "b418a60154510ca1a002a752ca9714984e21e4241e804d32555251faf8b78ffa";
      };
      dependencies = {
        either = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".either."1.13.0" {inherit profileName;}).out;
        rayon_core = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".rayon-core."1.12.1" {inherit profileName;}).out;
      };
    });

    "registry+https://github.com/rust-lang/crates.io-index".rayon-core."1.12.1" = overridableMkRustCrate (profileName: rec {
      name = "rayon-core";
      version = "1.12.1";
      registry = "registry+https://github.com/rust-lang/crates.io-index";
      src = fetchCratesIo {
        inherit name version;
        sha256 = "1465873a3dfdaa8ae7cb14b4383657caab0b3e8a0aa9ae8e04b044854c8dfce2";
      };
      dependencies = {
        crossbeam_deque = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".crossbeam-deque."0.8.6" {inherit profileName;}).out;
        crossbeam_utils = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".crossbeam-utils."0.8.21" {inherit profileName;}).out;
      };
    });

    "registry+https://github.com/rust-lang/crates.io-index".regex."1.11.1" = overridableMkRustCrate (profileName: rec {
      name = "regex";
      version = "1.11.1";
      registry = "registry+https://github.com/rust-lang/crates.io-index";
      src = fetchCratesIo {
        inherit name version;
        sha256 = "b544ef1b4eac5dc2db33ea63606ae9ffcfac26c1416a2806ae0bf5f56b201191";
      };
      features = builtins.concatLists [
        ["std"]
      ];
      dependencies = {
        aho_corasick = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".aho-corasick."1.1.3" {inherit profileName;}).out;
        memchr = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".memchr."2.7.4" {inherit profileName;}).out;
        regex_automata = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".regex-automata."0.4.9" {inherit profileName;}).out;
        regex_syntax = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".regex-syntax."0.8.5" {inherit profileName;}).out;
      };
    });

    "registry+https://github.com/rust-lang/crates.io-index".regex-automata."0.4.9" = overridableMkRustCrate (profileName: rec {
      name = "regex-automata";
      version = "0.4.9";
      registry = "registry+https://github.com/rust-lang/crates.io-index";
      src = fetchCratesIo {
        inherit name version;
        sha256 = "809e8dc61f6de73b46c85f4c96486310fe304c434cfa43669d7b40f711150908";
      };
      features = builtins.concatLists [
        ["alloc"]
        ["meta"]
        ["nfa-pikevm"]
        ["nfa-thompson"]
        ["std"]
        ["syntax"]
      ];
      dependencies = {
        aho_corasick = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".aho-corasick."1.1.3" {inherit profileName;}).out;
        memchr = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".memchr."2.7.4" {inherit profileName;}).out;
        regex_syntax = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".regex-syntax."0.8.5" {inherit profileName;}).out;
      };
    });

    "registry+https://github.com/rust-lang/crates.io-index".regex-syntax."0.8.5" = overridableMkRustCrate (profileName: rec {
      name = "regex-syntax";
      version = "0.8.5";
      registry = "registry+https://github.com/rust-lang/crates.io-index";
      src = fetchCratesIo {
        inherit name version;
        sha256 = "2b15c43186be67a4fd63bee50d0303afffcef381492ebe2c5d87f324e1b8815c";
      };
      features = builtins.concatLists [
        ["std"]
      ];
    });

    "registry+https://github.com/rust-lang/crates.io-index".ryu."1.0.18" = overridableMkRustCrate (profileName: rec {
      name = "ryu";
      version = "1.0.18";
      registry = "registry+https://github.com/rust-lang/crates.io-index";
      src = fetchCratesIo {
        inherit name version;
        sha256 = "f3cb5ba0dc43242ce17de99c180e96db90b235b8a9fdc9543c96d2209116bd9f";
      };
    });

    "registry+https://github.com/rust-lang/crates.io-index".same-file."1.0.6" = overridableMkRustCrate (profileName: rec {
      name = "same-file";
      version = "1.0.6";
      registry = "registry+https://github.com/rust-lang/crates.io-index";
      src = fetchCratesIo {
        inherit name version;
        sha256 = "93fc1dc3aaa9bfed95e02e6eadabb4baf7e3078b0bd1b4d7b6b0b68378900502";
      };
      dependencies = {
        ${
          if hostPlatform.isWindows
          then "winapi_util"
          else null
        } =
          (rustPackages."registry+https://github.com/rust-lang/crates.io-index".winapi-util."0.1.9" {inherit profileName;}).out;
      };
    });

    "registry+https://github.com/rust-lang/crates.io-index".serde."1.0.217" = overridableMkRustCrate (profileName: rec {
      name = "serde";
      version = "1.0.217";
      registry = "registry+https://github.com/rust-lang/crates.io-index";
      src = fetchCratesIo {
        inherit name version;
        sha256 = "02fc4265df13d6fa1d00ecff087228cc0a2b5f3c0e87e258d8b94a156e984c70";
      };
      features = builtins.concatLists [
        ["alloc"]
        ["default"]
        ["derive"]
        ["serde_derive"]
        ["std"]
      ];
      dependencies = {
        serde_derive = (buildRustPackages."registry+https://github.com/rust-lang/crates.io-index".serde_derive."1.0.217" {profileName = "__noProfile";}).out;
      };
    });

    "registry+https://github.com/rust-lang/crates.io-index".serde_derive."1.0.217" = overridableMkRustCrate (profileName: rec {
      name = "serde_derive";
      version = "1.0.217";
      registry = "registry+https://github.com/rust-lang/crates.io-index";
      src = fetchCratesIo {
        inherit name version;
        sha256 = "5a9bf7cf98d04a2b28aead066b7496853d4779c9cc183c440dbac457641e19a0";
      };
      features = builtins.concatLists [
        ["default"]
      ];
      dependencies = {
        proc_macro2 = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".proc-macro2."1.0.92" {inherit profileName;}).out;
        quote = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".quote."1.0.38" {inherit profileName;}).out;
        syn = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".syn."2.0.93" {inherit profileName;}).out;
      };
    });

    "registry+https://github.com/rust-lang/crates.io-index".serde_json."1.0.134" = overridableMkRustCrate (profileName: rec {
      name = "serde_json";
      version = "1.0.134";
      registry = "registry+https://github.com/rust-lang/crates.io-index";
      src = fetchCratesIo {
        inherit name version;
        sha256 = "d00f4175c42ee48b15416f6193a959ba3a0d67fc699a0db9ad12df9f83991c7d";
      };
      features = builtins.concatLists [
        ["default"]
        ["std"]
      ];
      dependencies = {
        itoa = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".itoa."1.0.14" {inherit profileName;}).out;
        memchr = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".memchr."2.7.4" {inherit profileName;}).out;
        ryu = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".ryu."1.0.18" {inherit profileName;}).out;
        serde = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".serde."1.0.217" {inherit profileName;}).out;
      };
    });

    "registry+https://github.com/rust-lang/crates.io-index".similar."2.6.0" = overridableMkRustCrate (profileName: rec {
      name = "similar";
      version = "2.6.0";
      registry = "registry+https://github.com/rust-lang/crates.io-index";
      src = fetchCratesIo {
        inherit name version;
        sha256 = "1de1d4f81173b03af4c0cbed3c898f6bff5b870e4a7f5d6f4057d62a7a4b686e";
      };
      features = builtins.concatLists [
        ["default"]
        ["inline"]
        ["text"]
      ];
    });

    "registry+https://github.com/rust-lang/crates.io-index".syn."2.0.93" = overridableMkRustCrate (profileName: rec {
      name = "syn";
      version = "2.0.93";
      registry = "registry+https://github.com/rust-lang/crates.io-index";
      src = fetchCratesIo {
        inherit name version;
        sha256 = "9c786062daee0d6db1132800e623df74274a0a87322d8e183338e01b3d98d058";
      };
      features = builtins.concatLists [
        ["clone-impls"]
        ["default"]
        ["derive"]
        ["full"]
        ["parsing"]
        ["printing"]
        ["proc-macro"]
        ["visit"]
        ["visit-mut"]
      ];
      dependencies = {
        proc_macro2 = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".proc-macro2."1.0.92" {inherit profileName;}).out;
        quote = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".quote."1.0.38" {inherit profileName;}).out;
        unicode_ident = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".unicode-ident."1.0.14" {inherit profileName;}).out;
      };
    });

    "registry+https://github.com/rust-lang/crates.io-index".textwrap."0.16.1" = overridableMkRustCrate (profileName: rec {
      name = "textwrap";
      version = "0.16.1";
      registry = "registry+https://github.com/rust-lang/crates.io-index";
      src = fetchCratesIo {
        inherit name version;
        sha256 = "23d434d3f8967a09480fb04132ebe0a3e088c173e6d0ee7897abbdf4eab0f8b9";
      };
    });

    "registry+https://github.com/rust-lang/crates.io-index".thiserror."2.0.9" = overridableMkRustCrate (profileName: rec {
      name = "thiserror";
      version = "2.0.9";
      registry = "registry+https://github.com/rust-lang/crates.io-index";
      src = fetchCratesIo {
        inherit name version;
        sha256 = "f072643fd0190df67a8bab670c20ef5d8737177d6ac6b2e9a236cb096206b2cc";
      };
      features = builtins.concatLists [
        ["default"]
        ["std"]
      ];
      dependencies = {
        thiserror_impl = (buildRustPackages."registry+https://github.com/rust-lang/crates.io-index".thiserror-impl."2.0.9" {profileName = "__noProfile";}).out;
      };
    });

    "registry+https://github.com/rust-lang/crates.io-index".thiserror-impl."2.0.9" = overridableMkRustCrate (profileName: rec {
      name = "thiserror-impl";
      version = "2.0.9";
      registry = "registry+https://github.com/rust-lang/crates.io-index";
      src = fetchCratesIo {
        inherit name version;
        sha256 = "7b50fa271071aae2e6ee85f842e2e28ba8cd2c5fb67f11fcb1fd70b276f9e7d4";
      };
      dependencies = {
        proc_macro2 = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".proc-macro2."1.0.92" {inherit profileName;}).out;
        quote = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".quote."1.0.38" {inherit profileName;}).out;
        syn = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".syn."2.0.93" {inherit profileName;}).out;
      };
    });

    "registry+https://github.com/rust-lang/crates.io-index".tinytemplate."1.2.1" = overridableMkRustCrate (profileName: rec {
      name = "tinytemplate";
      version = "1.2.1";
      registry = "registry+https://github.com/rust-lang/crates.io-index";
      src = fetchCratesIo {
        inherit name version;
        sha256 = "be4d6b5f19ff7664e8c98d03e2139cb510db9b0a60b55f8e8709b689d939b6bc";
      };
      dependencies = {
        serde = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".serde."1.0.217" {inherit profileName;}).out;
        serde_json = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".serde_json."1.0.134" {inherit profileName;}).out;
      };
    });

    "registry+https://github.com/rust-lang/crates.io-index".unicode-ident."1.0.14" = overridableMkRustCrate (profileName: rec {
      name = "unicode-ident";
      version = "1.0.14";
      registry = "registry+https://github.com/rust-lang/crates.io-index";
      src = fetchCratesIo {
        inherit name version;
        sha256 = "adb9e6ca4f869e1180728b7950e35922a7fc6397f7b641499e8f3ef06e50dc83";
      };
    });

    "registry+https://github.com/rust-lang/crates.io-index".walkdir."2.5.0" = overridableMkRustCrate (profileName: rec {
      name = "walkdir";
      version = "2.5.0";
      registry = "registry+https://github.com/rust-lang/crates.io-index";
      src = fetchCratesIo {
        inherit name version;
        sha256 = "29790946404f91d9c5d06f9874efddea1dc06c5efe94541a7d6863108e3a5e4b";
      };
      dependencies = {
        same_file = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".same-file."1.0.6" {inherit profileName;}).out;
        ${
          if hostPlatform.isWindows
          then "winapi_util"
          else null
        } =
          (rustPackages."registry+https://github.com/rust-lang/crates.io-index".winapi-util."0.1.9" {inherit profileName;}).out;
      };
    });

    "registry+https://github.com/rust-lang/crates.io-index".wasm-bindgen."0.2.99" = overridableMkRustCrate (profileName: rec {
      name = "wasm-bindgen";
      version = "0.2.99";
      registry = "registry+https://github.com/rust-lang/crates.io-index";
      src = fetchCratesIo {
        inherit name version;
        sha256 = "a474f6281d1d70c17ae7aa6a613c87fce69a127e2624002df63dcb39d6cf6396";
      };
      features = builtins.concatLists [
        ["default"]
        ["spans"]
        ["std"]
      ];
      dependencies = {
        cfg_if = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".cfg-if."1.0.0" {inherit profileName;}).out;
        once_cell = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".once_cell."1.20.2" {inherit profileName;}).out;
        wasm_bindgen_macro = (buildRustPackages."registry+https://github.com/rust-lang/crates.io-index".wasm-bindgen-macro."0.2.99" {profileName = "__noProfile";}).out;
      };
    });

    "registry+https://github.com/rust-lang/crates.io-index".wasm-bindgen-backend."0.2.99" = overridableMkRustCrate (profileName: rec {
      name = "wasm-bindgen-backend";
      version = "0.2.99";
      registry = "registry+https://github.com/rust-lang/crates.io-index";
      src = fetchCratesIo {
        inherit name version;
        sha256 = "5f89bb38646b4f81674e8f5c3fb81b562be1fd936d84320f3264486418519c79";
      };
      features = builtins.concatLists [
        ["spans"]
        ["std"]
      ];
      dependencies = {
        bumpalo = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".bumpalo."3.16.0" {inherit profileName;}).out;
        log = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".log."0.4.22" {inherit profileName;}).out;
        proc_macro2 = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".proc-macro2."1.0.92" {inherit profileName;}).out;
        quote = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".quote."1.0.38" {inherit profileName;}).out;
        syn = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".syn."2.0.93" {inherit profileName;}).out;
        wasm_bindgen_shared = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".wasm-bindgen-shared."0.2.99" {inherit profileName;}).out;
      };
    });

    "registry+https://github.com/rust-lang/crates.io-index".wasm-bindgen-macro."0.2.99" = overridableMkRustCrate (profileName: rec {
      name = "wasm-bindgen-macro";
      version = "0.2.99";
      registry = "registry+https://github.com/rust-lang/crates.io-index";
      src = fetchCratesIo {
        inherit name version;
        sha256 = "2cc6181fd9a7492eef6fef1f33961e3695e4579b9872a6f7c83aee556666d4fe";
      };
      features = builtins.concatLists [
        ["spans"]
        ["std"]
      ];
      dependencies = {
        quote = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".quote."1.0.38" {inherit profileName;}).out;
        wasm_bindgen_macro_support = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".wasm-bindgen-macro-support."0.2.99" {inherit profileName;}).out;
      };
    });

    "registry+https://github.com/rust-lang/crates.io-index".wasm-bindgen-macro-support."0.2.99" = overridableMkRustCrate (profileName: rec {
      name = "wasm-bindgen-macro-support";
      version = "0.2.99";
      registry = "registry+https://github.com/rust-lang/crates.io-index";
      src = fetchCratesIo {
        inherit name version;
        sha256 = "30d7a95b763d3c45903ed6c81f156801839e5ee968bb07e534c44df0fcd330c2";
      };
      features = builtins.concatLists [
        ["spans"]
        ["std"]
      ];
      dependencies = {
        proc_macro2 = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".proc-macro2."1.0.92" {inherit profileName;}).out;
        quote = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".quote."1.0.38" {inherit profileName;}).out;
        syn = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".syn."2.0.93" {inherit profileName;}).out;
        wasm_bindgen_backend = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".wasm-bindgen-backend."0.2.99" {inherit profileName;}).out;
        wasm_bindgen_shared = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".wasm-bindgen-shared."0.2.99" {inherit profileName;}).out;
      };
    });

    "registry+https://github.com/rust-lang/crates.io-index".wasm-bindgen-shared."0.2.99" = overridableMkRustCrate (profileName: rec {
      name = "wasm-bindgen-shared";
      version = "0.2.99";
      registry = "registry+https://github.com/rust-lang/crates.io-index";
      src = fetchCratesIo {
        inherit name version;
        sha256 = "943aab3fdaaa029a6e0271b35ea10b72b943135afe9bffca82384098ad0e06a6";
      };
    });

    "registry+https://github.com/rust-lang/crates.io-index".web-sys."0.3.76" = overridableMkRustCrate (profileName: rec {
      name = "web-sys";
      version = "0.3.76";
      registry = "registry+https://github.com/rust-lang/crates.io-index";
      src = fetchCratesIo {
        inherit name version;
        sha256 = "04dd7223427d52553d3702c004d3b2fe07c148165faa56313cb00211e31c12bc";
      };
      features = builtins.concatLists [
        ["CanvasRenderingContext2d"]
        ["Document"]
        ["DomRect"]
        ["DomRectReadOnly"]
        ["Element"]
        ["EventTarget"]
        ["HtmlCanvasElement"]
        ["HtmlElement"]
        ["Node"]
        ["Window"]
        ["default"]
        ["std"]
      ];
      dependencies = {
        js_sys = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".js-sys."0.3.76" {inherit profileName;}).out;
        wasm_bindgen = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".wasm-bindgen."0.2.99" {inherit profileName;}).out;
      };
    });

    "registry+https://github.com/rust-lang/crates.io-index".winapi."0.3.9" = overridableMkRustCrate (profileName: rec {
      name = "winapi";
      version = "0.3.9";
      registry = "registry+https://github.com/rust-lang/crates.io-index";
      src = fetchCratesIo {
        inherit name version;
        sha256 = "5c839a674fcd7a98952e593242ea400abe93992746761e38641405d28b00f419";
      };
      features = builtins.concatLists [
        ["consoleapi"]
        ["minwinbase"]
        ["minwindef"]
        ["processenv"]
        ["winbase"]
      ];
      dependencies = {
        ${
          if hostPlatform.config == "i686-pc-windows-gnu"
          then "winapi_i686_pc_windows_gnu"
          else null
        } =
          (rustPackages."registry+https://github.com/rust-lang/crates.io-index".winapi-i686-pc-windows-gnu."0.4.0" {inherit profileName;}).out;
        ${
          if hostPlatform.config == "x86_64-pc-windows-gnu"
          then "winapi_x86_64_pc_windows_gnu"
          else null
        } =
          (rustPackages."registry+https://github.com/rust-lang/crates.io-index".winapi-x86_64-pc-windows-gnu."0.4.0" {inherit profileName;}).out;
      };
    });

    "registry+https://github.com/rust-lang/crates.io-index".winapi-i686-pc-windows-gnu."0.4.0" = overridableMkRustCrate (profileName: rec {
      name = "winapi-i686-pc-windows-gnu";
      version = "0.4.0";
      registry = "registry+https://github.com/rust-lang/crates.io-index";
      src = fetchCratesIo {
        inherit name version;
        sha256 = "ac3b87c63620426dd9b991e5ce0329eff545bccbbb34f3be09ff6fb6ab51b7b6";
      };
    });

    "registry+https://github.com/rust-lang/crates.io-index".winapi-util."0.1.9" = overridableMkRustCrate (profileName: rec {
      name = "winapi-util";
      version = "0.1.9";
      registry = "registry+https://github.com/rust-lang/crates.io-index";
      src = fetchCratesIo {
        inherit name version;
        sha256 = "cf221c93e13a30d793f7645a0e7762c55d169dbb0a49671918a2319d289b10bb";
      };
      dependencies = {
        ${
          if hostPlatform.isWindows
          then "windows_sys"
          else null
        } =
          (rustPackages."registry+https://github.com/rust-lang/crates.io-index".windows-sys."0.59.0" {inherit profileName;}).out;
      };
    });

    "registry+https://github.com/rust-lang/crates.io-index".winapi-x86_64-pc-windows-gnu."0.4.0" = overridableMkRustCrate (profileName: rec {
      name = "winapi-x86_64-pc-windows-gnu";
      version = "0.4.0";
      registry = "registry+https://github.com/rust-lang/crates.io-index";
      src = fetchCratesIo {
        inherit name version;
        sha256 = "712e227841d057c1ee1cd2fb22fa7e5a5461ae8e48fa2ca79ec42cfc1931183f";
      };
    });

    "registry+https://github.com/rust-lang/crates.io-index".windows-sys."0.59.0" = overridableMkRustCrate (profileName: rec {
      name = "windows-sys";
      version = "0.59.0";
      registry = "registry+https://github.com/rust-lang/crates.io-index";
      src = fetchCratesIo {
        inherit name version;
        sha256 = "1e38bc4d79ed67fd075bcc251a1c39b32a1776bbe92e5bef1f0bf1f8c531853b";
      };
      features = builtins.concatLists [
        ["Win32"]
        ["Win32_Foundation"]
        ["Win32_Storage"]
        ["Win32_Storage_FileSystem"]
        ["Win32_System"]
        ["Win32_System_Console"]
        ["Win32_System_SystemInformation"]
        ["Win32_UI"]
        ["Win32_UI_Input"]
        ["Win32_UI_Input_KeyboardAndMouse"]
        ["default"]
      ];
      dependencies = {
        windows_targets = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".windows-targets."0.52.6" {inherit profileName;}).out;
      };
    });

    "registry+https://github.com/rust-lang/crates.io-index".windows-targets."0.52.6" = overridableMkRustCrate (profileName: rec {
      name = "windows-targets";
      version = "0.52.6";
      registry = "registry+https://github.com/rust-lang/crates.io-index";
      src = fetchCratesIo {
        inherit name version;
        sha256 = "9b724f72796e036ab90c1021d4780d4d3d648aca59e491e6b98e725b84e99973";
      };
      dependencies = {
        ${
          if hostPlatform.config == "aarch64-pc-windows-gnullvm"
          then "windows_aarch64_gnullvm"
          else null
        } =
          (rustPackages."registry+https://github.com/rust-lang/crates.io-index".windows_aarch64_gnullvm."0.52.6" {inherit profileName;}).out;
        ${
          if hostPlatform.parsed.cpu.name == "aarch64" && hostPlatform.parsed.abi.name == "msvc"
          then "windows_aarch64_msvc"
          else null
        } =
          (rustPackages."registry+https://github.com/rust-lang/crates.io-index".windows_aarch64_msvc."0.52.6" {inherit profileName;}).out;
        ${
          if hostPlatform.parsed.cpu.name == "i686" && hostPlatform.parsed.abi.name == "gnu"
          then "windows_i686_gnu"
          else null
        } =
          (rustPackages."registry+https://github.com/rust-lang/crates.io-index".windows_i686_gnu."0.52.6" {inherit profileName;}).out;
        ${
          if hostPlatform.config == "i686-pc-windows-gnullvm"
          then "windows_i686_gnullvm"
          else null
        } =
          (rustPackages."registry+https://github.com/rust-lang/crates.io-index".windows_i686_gnullvm."0.52.6" {inherit profileName;}).out;
        ${
          if hostPlatform.parsed.cpu.name == "i686" && hostPlatform.parsed.abi.name == "msvc"
          then "windows_i686_msvc"
          else null
        } =
          (rustPackages."registry+https://github.com/rust-lang/crates.io-index".windows_i686_msvc."0.52.6" {inherit profileName;}).out;
        ${
          if hostPlatform.parsed.cpu.name == "x86_64" && hostPlatform.parsed.abi.name == "gnu"
          then "windows_x86_64_gnu"
          else null
        } =
          (rustPackages."registry+https://github.com/rust-lang/crates.io-index".windows_x86_64_gnu."0.52.6" {inherit profileName;}).out;
        ${
          if hostPlatform.config == "x86_64-pc-windows-gnullvm"
          then "windows_x86_64_gnullvm"
          else null
        } =
          (rustPackages."registry+https://github.com/rust-lang/crates.io-index".windows_x86_64_gnullvm."0.52.6" {inherit profileName;}).out;
        ${
          if (hostPlatform.parsed.cpu.name == "x86_64" || hostPlatform.parsed.cpu.name == "arm64ec") && hostPlatform.parsed.abi.name == "msvc"
          then "windows_x86_64_msvc"
          else null
        } =
          (rustPackages."registry+https://github.com/rust-lang/crates.io-index".windows_x86_64_msvc."0.52.6" {inherit profileName;}).out;
      };
    });

    "registry+https://github.com/rust-lang/crates.io-index".windows_aarch64_gnullvm."0.52.6" = overridableMkRustCrate (profileName: rec {
      name = "windows_aarch64_gnullvm";
      version = "0.52.6";
      registry = "registry+https://github.com/rust-lang/crates.io-index";
      src = fetchCratesIo {
        inherit name version;
        sha256 = "32a4622180e7a0ec044bb555404c800bc9fd9ec262ec147edd5989ccd0c02cd3";
      };
    });

    "registry+https://github.com/rust-lang/crates.io-index".windows_aarch64_msvc."0.52.6" = overridableMkRustCrate (profileName: rec {
      name = "windows_aarch64_msvc";
      version = "0.52.6";
      registry = "registry+https://github.com/rust-lang/crates.io-index";
      src = fetchCratesIo {
        inherit name version;
        sha256 = "09ec2a7bb152e2252b53fa7803150007879548bc709c039df7627cabbd05d469";
      };
    });

    "registry+https://github.com/rust-lang/crates.io-index".windows_i686_gnu."0.52.6" = overridableMkRustCrate (profileName: rec {
      name = "windows_i686_gnu";
      version = "0.52.6";
      registry = "registry+https://github.com/rust-lang/crates.io-index";
      src = fetchCratesIo {
        inherit name version;
        sha256 = "8e9b5ad5ab802e97eb8e295ac6720e509ee4c243f69d781394014ebfe8bbfa0b";
      };
    });

    "registry+https://github.com/rust-lang/crates.io-index".windows_i686_gnullvm."0.52.6" = overridableMkRustCrate (profileName: rec {
      name = "windows_i686_gnullvm";
      version = "0.52.6";
      registry = "registry+https://github.com/rust-lang/crates.io-index";
      src = fetchCratesIo {
        inherit name version;
        sha256 = "0eee52d38c090b3caa76c563b86c3a4bd71ef1a819287c19d586d7334ae8ed66";
      };
    });

    "registry+https://github.com/rust-lang/crates.io-index".windows_i686_msvc."0.52.6" = overridableMkRustCrate (profileName: rec {
      name = "windows_i686_msvc";
      version = "0.52.6";
      registry = "registry+https://github.com/rust-lang/crates.io-index";
      src = fetchCratesIo {
        inherit name version;
        sha256 = "240948bc05c5e7c6dabba28bf89d89ffce3e303022809e73deaefe4f6ec56c66";
      };
    });

    "registry+https://github.com/rust-lang/crates.io-index".windows_x86_64_gnu."0.52.6" = overridableMkRustCrate (profileName: rec {
      name = "windows_x86_64_gnu";
      version = "0.52.6";
      registry = "registry+https://github.com/rust-lang/crates.io-index";
      src = fetchCratesIo {
        inherit name version;
        sha256 = "147a5c80aabfbf0c7d901cb5895d1de30ef2907eb21fbbab29ca94c5b08b1a78";
      };
    });

    "registry+https://github.com/rust-lang/crates.io-index".windows_x86_64_gnullvm."0.52.6" = overridableMkRustCrate (profileName: rec {
      name = "windows_x86_64_gnullvm";
      version = "0.52.6";
      registry = "registry+https://github.com/rust-lang/crates.io-index";
      src = fetchCratesIo {
        inherit name version;
        sha256 = "24d5b23dc417412679681396f2b49f3de8c1473deb516bd34410872eff51ed0d";
      };
    });

    "registry+https://github.com/rust-lang/crates.io-index".windows_x86_64_msvc."0.52.6" = overridableMkRustCrate (profileName: rec {
      name = "windows_x86_64_msvc";
      version = "0.52.6";
      registry = "registry+https://github.com/rust-lang/crates.io-index";
      src = fetchCratesIo {
        inherit name version;
        sha256 = "589f6da84c646204747d1270a2a5661ea66ed1cced2631d546fdfb155959f9ec";
      };
    });
  }
